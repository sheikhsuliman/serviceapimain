# Set by Maven profile
spring.profiles.active=@spring.profiles.active@

# Set General Environment
# Is needed to define the flyway data folder and the file storage s3 bucket
environment=${ENVIRONMENT:local}

# Whether response compression is enabled.
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml
# Minimum "Content-Length" value that is required for compression to be performed.
server.compression.min-response-size=2KB
# Maximum time the response should be cached, in seconds if no duration suffix is not specified.
spring.resources.cache.cachecontrol.max-age=86400
# The cache must re-validate stale resources with the server. Any expired resources must not be used without re-validating.
spring.resources.cache.cachecontrol.must-revalidate=true

# Set the project name - also used by our swagger UI
spring.application.name=SwissCon Service API
# Work around useless errors
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.servlet.multipart.max-file-size=1000MB
spring.servlet.multipart.max-request-size=1000MB
# Work around duplicate beans or annotations like @EnableJpaAuditing
#spring.main.allow-bean-definition-overriding=true
#spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=100
spring.jpa.properties.javax.persistence.validation.mode=none
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# jdbc:h2:mem:testdb
# Logging settings
server.error.include-stacktrace=always
# HTTP port
server.port=8080
# Security/Auth
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=email,name,verified 
spring.security.oauth2.client.registration.google.client-id=1011974249454-6gq0hr01gqh3cndoqnss5r69tkk2nd84.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=saDA6Cj60wipncFM-hzBD-C6
spring.security.oauth2.client.registration.facebook.client-id=1234020186718741
spring.security.oauth2.client.registration.facebook.client-secret=0c0abaf685a83e879e8e48b1167c96ab

# lemon.oauth2-authentication-success-url=http://localhost:9000/social-login-success?token=

# This setting is used in CustomCorsFilter to define the origins which can request the server.
# Not necessary to configure localhost here.
# Comma separated domain list like example.com,test.com ...
# For all sub domains: *.domain.com
# For specific sub domain: sub-domain.domain.com
# For all domains: *
cors.allowed-origins=${ALLOWED_ORIGINS:*.siryus.com,*.swisscon.com}

# lemon.recaptcha.sitekey=6LdwxRcUAAAAABkhOGWQXhl9FsR27D5YUJRuGzx0
# lemon.recaptcha.secretkey=6LdwxRcUAAAAADaG0Eo1qkYCco15cnngiBoBt2IO
# lemon.recaptcha.sitekey=6LdwxRcUAAAAABkhOGWQXhl9FsR27D5YUJRuGzx0
# lemon.recaptcha.secretkey=6LdwxRcUAAAAADaG0Eo1qkYCco15cnngiBoBt2IO

# An aes-128-cbc key generated at https://asecuritysite.com/encryption/keygen (take the "key" field)
lemon.jwt.secret=${JWT_SECRET:841D8A6C80CBA4FCAD32D5367C18C53B}

# expiration time in ms for email links (259200000 = 3 days)
lemon.jwt.expiration-millis=${LEMON_EXPIRATION_MILLIS:259200000}
# expiration time in ms for signup email link (31536000000? = 1 year)
lemon.jwt.signup-link.expiration-millis=${LEMON_SIGNUP_EXPIRATION_MILLIS:31536000000}

# lemon.jwt.short-lived-millis=120000   # two minutes

# First ADMIN user (is not created by our application (LemonService.onStartup() overridden)
#lemon.admin.username=admin@siryus.com
#lemon.admin.password=admin123
#debug=true
#trace=true

#logging.config= # Location of the logging configuration file. For instance, `classpath:logback.xml` for Logback.
logging.exception-conversion-word=%wEx
#logging.file=target/logs/app-log.log
logging.level.root=INFO
#logging.level.com.naturalprogrammer=info
#logging.level.org.hibernate=DEBUG
#logging.level.org.hibernate.SQL=warn
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.com.siryus.swisscon.api=debug
# Work around swagger bug
logging.level.org.flywaydb=ERROR
logging.level.org.quartz=ERROR
logging.level.io.springfox=ERROR
logging.level.springfox=ERROR
logging.level.io.swagger=ERROR
logging.level.com.naturalprogrammer.spring=ERROR
logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS,UTC
logging.pattern.console=%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%X{correlationId}] - User:%X{userId}/%X{username} --- [%-10.10t] %-60C : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
logging.pattern.file=%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%X{correlationId}] - User:%X{userId}/%X{username} --- [%-10.10t] %-60C  : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}

#lemon link configuration
lemon.confirmation-link=${LEMON_CONFIRMATION_LINK:/confirm-email/{userId}/{code}}
lemon.invitation-link=${LEMON_INVITATION_LINK:/confirm-invite/{userId}/{code}}
#//TODO remove after SI-177
lemon.signup-link.deprecated=/signup/{email}/{code}
lemon.signup-link=${LEMON_SIGNUP_LINK:/signup/{companyId}/{code}}
lemon.reset-link=${LEMON_RESET_LINK:/reset-password/{userId}/{code}}
lemon.change-email-link=${LEMON_CHANGE_EMAIL_LINK:/change-email/{userId}/{code}}


# Signup token to unblock the restriction for the validate-signup-code/signup endpoint
# If the environment variable is 'disabled' > there is no signup token
# For prod > this environment variable should be disabled
lemon.default-signup-token=${DEFAULT_SIGNUP_TOKEN:disabled}

# Url of the UI (Authentication Part) (Needed to build the Mail Verification Link)

lemon.application-url=${APPLICATION_URL:https://auth.dev.siryus.com}
# Url of the Spring Application
base.api.url=${BASE_API_URL:http://api.dev.siryus.com}

#mail configuration
spring.mail.host=${MAIL_HOST:foo}
spring.mail.username=${MAIL_USERNAME:none}
spring.mail.password=${MAIL_PASSWORD:none}

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true

spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false

#AWS Access
aws_access_key_id=${AWS_ACCESS_KEY_ID:none}
aws_secret_access_key=${AWS_SECRET_ACCESS_KEY:none}
aws_region=${AWS_REGION:eu-central-1}

# S3 Bucket Name to store the Files
aws_namecard_bucket=${AWS_NAMCECARD_BUCKET:swisscon-storage-${environment}}
spring.flyway.placeholders.aws_namecard_bucket=${aws_namecard_bucket}

# Cleans the database on startup in case there are checksum errors (scripts change). This should not be activated in prod environment
spring.flyway.clean-on-validation-error=${FLYWAY_CLEAN_ON_VALIDATION_ERROR:true}

# Flyway locations
spring.flyway.locations=classpath:db/migrations/common,classpath:db/migrations/data/common,classpath:db/migrations/data/${environment}

# Configure Spring Actuator
management.endpoints.web.exposure.include=health,flyway
management.endpoint.health.show-details=always

# Name of cookie (e.g. localhostSiryus, devSiryus)
cookie.name=${COOKIE_NAME:Siryus}

# Max age of cookie as int value
cookie.maxAge=${COOKIE_MAX_AGE:2678400}

# Should be set to true when HTTPS is used to serve backend
cookie.secure=${COOKIE_IS_SECURE:false}

# spring.http.multipart.enabled=false

#
# Logging setup
#
logging.level.com.naturalprogrammer=WARN
logging.level.org.springframework=WARN
